environment:
  global:
    REPO_DIR: astropy
    PACKAGE_NAME: astropy
    BUILD_COMMIT: v2.0.13
    NP_BUILD_DEP: "numpy==1.10.4"
    NP_TEST_DEP: "numpy==1.10.4"
    OTHER_BUILD_DEP: "cython jinja2"
    OTHER_TEST_DEP: "pytest==3.6.4"
    WHEELHOUSE_UPLOADER_USERNAME: travis-worker
    WHEELHOUSE_UPLOADER_SECRET:
        secure:
            4QS/NVw6J8KsxGPpAf6XD54ALx5ifr7xNqDOQhtpAvGPAeAx2ljmQ+gv2bYHs8YJ

  matrix:
    - PYTHON: C:\Python27
    - PYTHON: C:\Python27-x64
    - PYTHON: C:\Python34
    - PYTHON: C:\Python34-x64
    - PYTHON: C:\Python35
      NP_BUILD_DEP: "numpy==1.10.4"
      NP_TEST_DEP: "numpy==1.10.4"
    - PYTHON: C:\Python35-x64
      NP_BUILD_DEP: "numpy==1.10.4"
      NP_TEST_DEP: "numpy==1.10.4"
    - PYTHON: C:\Python36
      NP_BUILD_DEP: "numpy==1.11.3"
      NP_TEST_DEP: "numpy==1.11.3"
    - PYTHON: C:\Python36-x64
      NP_BUILD_DEP: "numpy==1.11.3"
      NP_TEST_DEP: "numpy==1.11.3"

matrix:
    fast_finish: false    # We want to get as many of the combinations as possible even if some are failing

install:
    # Fetch submodules
    - git submodule update --init --recursive

    # Prepend newly installed Python to the PATH of this build (this cannot be
    # done from inside the powershell script as it would require to restart
    # the parent CMD process).
    - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
    - python -m pip install -U pip

    # Fix MSVC builds for 64-bit Python. See:
    # http://stackoverflow.com/questions/32091593/cannot-install-windows-sdk-7-1-on-windows-10
    - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"

    # Check that we have the expected version and architecture for Python
    - python --version
    - python -c "import struct; print(struct.calcsize('P') * 8)"

build_script:
    # Install the dependencies of the project.
    - pip install %NP_BUILD_DEP% %OTHER_BUILD_DEPENDS%
    # Build wheel
    - pip install wheel
    - cd %REPO_DIR%
    - git checkout %BUILD_COMMIT%
    - python setup.py bdist_wheel
    - cd ..

test_script:
    # create test env
    - virtualenv --python %PYTHON%\Python.exe test_env
    - test_env\Scripts\activate.bat
    - where python
    - pip install %NP_TEST_DEP% %OTHER_TEST_DEP%

    # install from wheel
    - pip install --pre --no-index --find-links %REPO_DIR%\dist\ %PACKAGE_NAME%

    # Change into an innocuous directory and find tests from installation
    - mkdir for_testing
    - cd for_testing
    - python --version
    - python -c "import astropy; astropy.test(remote_data='none')"
    - cd ..

artifacts:
    - path: "%REPO_DIR%\\dist\\*"

on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
  - pip install wheelhouse-uploader
  - "python -m wheelhouse_uploader upload
    --no-ssl-check --local-folder=%REPO_DIR%\\dist --no-update-index wheels"
